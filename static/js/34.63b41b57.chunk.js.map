{"version":3,"sources":["components/Spell/Spell.js"],"names":["Spell","getDescriptorsForWords","useDatabaseContext","useState","letterDescriptors","setLetterDescriptors","status","setStatus","loadStatus","useDatabaseLoadStatusContext","letters","React","useMemo","useEffect","a","async","console","error","loadLetterDescriptors","Frame","styled","div","color","loading","speedMultiplier","className","map","word","phonemics","type","key","cuid"],"mappings":"gRAiGeA,UAtFD,WAAO,IACXC,EAA2BC,cAA3BD,uBADU,EAEgCE,mBAAS,IAFzC,mBAEXC,EAFW,KAEQC,EAFR,OAGUF,mBAAS,QAHnB,mBAGXG,EAHW,KAGHC,EAHG,KAIVC,EAAeC,cAAfD,WAEFE,EAAUC,IAAMC,SACpB,iBAAM,CACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OAEF,IAGFC,qBAAU,YACsB,mBAAAC,EAAAC,OAAA,gEAE1BR,EAAU,WAFgB,WAAAO,EAAA,MAIMb,EAAuBS,IAJ7B,OAIpBN,EAJoB,OAK1BG,EAAU,YACVF,EAAqBD,GANK,gDAQ1BY,QAAQC,MAAR,oDACAV,EAAU,YATgB,gEAa9BW,KACC,CAACjB,EAAwBS,IAE5B,IAAMS,EAAQC,IAAOC,IAAV,2JAQX,MAAe,SAAXf,GAAgC,YAAXA,GAAuC,UAAfE,EAE7C,cAACW,EAAD,KACE,cAAC,IAAD,CAAcG,MAAM,UAAUC,SAAS,EAAMC,gBAAiB,MAKrD,aAAXlB,EACK,kDAGM,aAAXA,EAEA,qBAAKmB,UAAU,2BACZrB,EAAkBsB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACrB,cAAC,IAAD,CAAMC,KAAK,QAAQC,IAAKC,MAAQJ,KAAMA,EAAMC,UAAWA,aAJ/D","file":"static/js/34.63b41b57.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport React, { useEffect, useState } from \"react\";\nimport Word from \"../Word/Word.js\";\nimport cuid from \"cuid\";\nimport \"./Spell.css\";\nimport { useDatabaseLoadStatusContext } from \"components/providers/DatabaseLoadStatusProvider\";\nimport { useDatabaseContext } from \"components/providers/DatabaseProvider\";\n\nconst Spell = () => {\n  const { getDescriptorsForWords } = useDatabaseContext();\n  const [letterDescriptors, setLetterDescriptors] = useState([]);\n  const [status, setStatus] = useState(\"idle\");\n  const { loadStatus } = useDatabaseLoadStatusContext();\n\n  const letters = React.useMemo(\n    () => [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ],\n    []\n  );\n\n  useEffect(() => {\n    const loadLetterDescriptors = async () => {\n      try {\n        setStatus(\"loading\");\n\n        const letterDescriptors = await getDescriptorsForWords(letters);\n        setStatus(\"resolved\");\n        setLetterDescriptors(letterDescriptors);\n      } catch (error) {\n        console.error(`Error loading letter descriptors - ${error}`);\n        setStatus(\"rejected\");\n      }\n    };\n\n    loadLetterDescriptors();\n  }, [getDescriptorsForWords, letters]);\n\n  const Frame = styled.div`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  `;\n\n  if (status === \"idle\" || status === \"loading\" || loadStatus === \"empty\") {\n    return (\n      <Frame>\n        <BounceLoader color=\"#ff0000\" loading={true} speedMultiplier={0.8} />\n      </Frame>\n    );\n  }\n\n  if (status === \"rejected\") {\n    return <div>An error has happened</div>;\n  }\n\n  if (status === \"resolved\") {\n    return (\n      <div className=\"spell-component-wrapper\">\n        {letterDescriptors.map(({ word, phonemics }) => (\n          <Word type=\"spell\" key={cuid()} word={word} phonemics={phonemics} />\n        ))}\n      </div>\n    );\n  }\n};\n\nexport default Spell;\n"],"sourceRoot":""}