{"version":3,"sources":["utils/db/divided lazy /^/.//.*$/ groupOptions: {} namespace object","components/NavMenu/NavMenu.js","components/WordsList/WordsList.js","SVG/cancel.svg","components/search-words-form/SearchWordsForm.js","components/phrase/Phrase.js","components/lib/Error.js","components/lib/Frame.js","components/lib/Spinner.js","hooks/useAsync.js","components/pages/words/Words.js","App.js","hooks/useLoadPendingParts.js","serviceWorker.js","AppErrorBoundary.js","index.tsx","components/providers/DatabaseProvider.js","components/providers/DatabaseLoadStatusProvider.js","components/Word/Word.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","NavList","styled","ul","NavItem","item","css","to","activeStyle","color","NavMenu","listOfItems","getStyle","display","inline","grid","forwardRef","wordsRef","words","onClick","ref","word","phonemics","Word","short","key","cuid","_excluded","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref3","d","_ref","svgRef","title","props","width","height","viewBox","undefined","ForwardRef","SearchWordsForm","onChange","getDescriptorsForWords","useDatabaseContext","useState","input","search","setSearch","searchInputRef","useRef","useHotkeys","current","focus","handleClearClick","getInputWords","str","replace","toLowerCase","split","filter","className","htmlFor","hidden","inputRef","debounceTimeout","value","event","a","async","inputWords","inputWordsDescriptors","placeholder","tabIndex","onKeyPress","Phrase","playing","timeoutListRef","stopPlaying","startPlaying","audioElements","querySelectorAll","elapsedTimeInMs","forEach","audio","push","setTimeout","play","duration","clearTimeout","resetHandler","error","role","Frame","message","div","Spinner","size","loading","speedMultiplier","defaultInitialState","status","data","useAsync","initialState","initialStateRef","React","s","safeSetState","dispatch","mounted","useSafeDispatch","setData","setError","reset","run","promise","reject","isIdle","isLoading","isError","isSuccess","WordInfo","searchInputWords","selectedWord","isSearchActive","getDefinition","definition","wordInfo","setWordInfo","useEffect","getWordInfo","Words","getSomeWords","setSearchInputWords","setSelectedWord","initialWordNumber","setInitialWordNumber","resetWordsStatus","resetStatus","useCallback","Phonemes","lazy","Spell","DatabaseLoadingStatus","loadStatus","useDatabaseLoadStatusContext","visible","setVisible","handleClearMessage","isLoaded","App","pendingParts","updateLoadedParts","currentRenderLoadedPartsRef","db","populate","writePendingPartWordsToDb","part","loadFromDiskResult","wordDescriptors","console","info","name","loadPendingParts","promiseList","pendingPart","allSettled","useLoadPendingParts","path","fallback","Boolean","window","location","hostname","match","ErrorFallback","resetErrorBoundary","AppErrorBoundary","children","FallbackComponent","ReactDOM","render","DatabaseProvider","DatabaseLoadStatusProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","DatabaseContext","createContext","useContext","displayName","createOrOpenDb","PouchDB","adapter","setDb","createIndex","index","fields","close","numberOfWords","allDocs","include_docs","limit","parsedWords","rows","n","doc","find","selector","wordDescriptor","docs","definitions","defs","def","queries","queriesResults","reduce","acc","queryResult","bulkDocs","result","catch","Provider","initialPendingParts","fileNamesJson","fileNames","DatabaseLoadStatusContext","JSON","parse","localStorage","getItem","loadedParts","setLoadedParts","every","includes","getLoadStatus","getPendingParts","setItem","stringify","parts","type","handleOnMouseOver","querySelector","onMouseOver","controls","src"],"mappings":"gGAAA,IAAIA,EAAM,CACT,SAAU,CACT,GACA,GAED,cAAe,CACd,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,GAED,eAAgB,CACf,GACA,GAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,SAAU,CACT,GACA,IAED,cAAe,CACd,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,SAAU,CACT,GACA,IAED,cAAe,CACd,GACA,IAED,UAAW,CACV,GACA,IAED,eAAgB,CACf,GACA,IAED,SAAU,CACT,GACA,IAED,cAAe,CACd,GACA,IAED,SAAU,CACT,GACA,IAED,cAAe,CACd,GACA,IAED,SAAU,CACT,GACA,IAED,cAAe,CACd,GACA,IAED,SAAU,CACT,GACA,IAED,cAAe,CACd,GACA,IAED,SAAU,CACT,GACA,IAED,cAAe,CACd,GACA,IA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","file":"static/js/main.3cdb3f41.chunk.js","sourcesContent":["var map = {\n\t\"./db-1\": [\n\t\t44,\n\t\t0\n\t],\n\t\"./db-1.json\": [\n\t\t44,\n\t\t0\n\t],\n\t\"./db-10\": [\n\t\t45,\n\t\t1\n\t],\n\t\"./db-10.json\": [\n\t\t45,\n\t\t1\n\t],\n\t\"./db-11\": [\n\t\t46,\n\t\t2\n\t],\n\t\"./db-11.json\": [\n\t\t46,\n\t\t2\n\t],\n\t\"./db-12\": [\n\t\t47,\n\t\t3\n\t],\n\t\"./db-12.json\": [\n\t\t47,\n\t\t3\n\t],\n\t\"./db-13\": [\n\t\t48,\n\t\t4\n\t],\n\t\"./db-13.json\": [\n\t\t48,\n\t\t4\n\t],\n\t\"./db-14\": [\n\t\t49,\n\t\t5\n\t],\n\t\"./db-14.json\": [\n\t\t49,\n\t\t5\n\t],\n\t\"./db-15\": [\n\t\t50,\n\t\t6\n\t],\n\t\"./db-15.json\": [\n\t\t50,\n\t\t6\n\t],\n\t\"./db-16\": [\n\t\t51,\n\t\t7\n\t],\n\t\"./db-16.json\": [\n\t\t51,\n\t\t7\n\t],\n\t\"./db-17\": [\n\t\t52,\n\t\t8\n\t],\n\t\"./db-17.json\": [\n\t\t52,\n\t\t8\n\t],\n\t\"./db-18\": [\n\t\t53,\n\t\t9\n\t],\n\t\"./db-18.json\": [\n\t\t53,\n\t\t9\n\t],\n\t\"./db-19\": [\n\t\t54,\n\t\t10\n\t],\n\t\"./db-19.json\": [\n\t\t54,\n\t\t10\n\t],\n\t\"./db-2\": [\n\t\t55,\n\t\t11\n\t],\n\t\"./db-2.json\": [\n\t\t55,\n\t\t11\n\t],\n\t\"./db-20\": [\n\t\t56,\n\t\t12\n\t],\n\t\"./db-20.json\": [\n\t\t56,\n\t\t12\n\t],\n\t\"./db-21\": [\n\t\t57,\n\t\t13\n\t],\n\t\"./db-21.json\": [\n\t\t57,\n\t\t13\n\t],\n\t\"./db-22\": [\n\t\t58,\n\t\t14\n\t],\n\t\"./db-22.json\": [\n\t\t58,\n\t\t14\n\t],\n\t\"./db-23\": [\n\t\t59,\n\t\t15\n\t],\n\t\"./db-23.json\": [\n\t\t59,\n\t\t15\n\t],\n\t\"./db-24\": [\n\t\t60,\n\t\t16\n\t],\n\t\"./db-24.json\": [\n\t\t60,\n\t\t16\n\t],\n\t\"./db-25\": [\n\t\t61,\n\t\t17\n\t],\n\t\"./db-25.json\": [\n\t\t61,\n\t\t17\n\t],\n\t\"./db-26\": [\n\t\t62,\n\t\t18\n\t],\n\t\"./db-26.json\": [\n\t\t62,\n\t\t18\n\t],\n\t\"./db-27\": [\n\t\t63,\n\t\t19\n\t],\n\t\"./db-27.json\": [\n\t\t63,\n\t\t19\n\t],\n\t\"./db-28\": [\n\t\t64,\n\t\t20\n\t],\n\t\"./db-28.json\": [\n\t\t64,\n\t\t20\n\t],\n\t\"./db-29\": [\n\t\t65,\n\t\t21\n\t],\n\t\"./db-29.json\": [\n\t\t65,\n\t\t21\n\t],\n\t\"./db-3\": [\n\t\t66,\n\t\t22\n\t],\n\t\"./db-3.json\": [\n\t\t66,\n\t\t22\n\t],\n\t\"./db-30\": [\n\t\t67,\n\t\t23\n\t],\n\t\"./db-30.json\": [\n\t\t67,\n\t\t23\n\t],\n\t\"./db-4\": [\n\t\t68,\n\t\t24\n\t],\n\t\"./db-4.json\": [\n\t\t68,\n\t\t24\n\t],\n\t\"./db-5\": [\n\t\t69,\n\t\t25\n\t],\n\t\"./db-5.json\": [\n\t\t69,\n\t\t25\n\t],\n\t\"./db-6\": [\n\t\t70,\n\t\t26\n\t],\n\t\"./db-6.json\": [\n\t\t70,\n\t\t26\n\t],\n\t\"./db-7\": [\n\t\t71,\n\t\t27\n\t],\n\t\"./db-7.json\": [\n\t\t71,\n\t\t27\n\t],\n\t\"./db-8\": [\n\t\t72,\n\t\t28\n\t],\n\t\"./db-8.json\": [\n\t\t72,\n\t\t28\n\t],\n\t\"./db-9\": [\n\t\t73,\n\t\t29\n\t],\n\t\"./db-9.json\": [\n\t\t73,\n\t\t29\n\t],\n\t\"./file-names\": [\n\t\t22\n\t],\n\t\"./file-names.json\": [\n\t\t22\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 101;\nmodule.exports = webpackAsyncContext;","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n  width: 320px;\n  margin: 25px auto;\n  text-transform: uppercase;\n  font-weight: 700;\n`;\n\nconst NavItem = ({ item }) => {\n  return (\n    <li>\n      <NavLink\n        css={css`\n          color: #ababab;\n          text-decoration: none;\n        `}\n        to={`/${item}`}\n        activeStyle={{\n          color: \"#000\",\n        }}\n      >\n        {item}\n      </NavLink>\n    </li>\n  );\n};\n\nfunction NavMenu({ listOfItems }) {\n  return (\n    <nav\n      css={css`\n        border-bottom: 1px solid #ababab;\n      `}\n    >\n      <NavList>\n        <NavItem item=\"words\" />\n        <NavItem item=\"phonemes\" />\n        <NavItem item=\"spell\" />\n      </NavList>\n    </nav>\n  );\n}\n\nexport default NavMenu;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\";\nimport Word from \"../Word/Word.js\";\nimport cuid from \"cuid\";\nimport { forwardRef } from \"react\";\n\nconst getStyle = (display) => {\n  const inline = css`\n    display: block;\n    padding: 30px;\n    line-height: 65px;\n  `;\n  const grid = css`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n    grid-gap: 1.5rem;\n    align-items: center;\n    max-width: 960px;\n    margin: 0 auto;\n  `;\n\n  const displayOptions = {\n    grid,\n    inline,\n  };\n\n  return displayOptions[display];\n};\n\nconst WordsList = ({ words, display, onClick }, wordsRef) => {\n  const getKey = () => cuid();\n\n  return (\n    <div css={getStyle(display)} ref={wordsRef}>\n      {words.map(({ word, phonemics }, id) => (\n        <Word\n          onClick={onClick}\n          short={display === \"inline\"}\n          key={getKey(id)}\n          word={word}\n          phonemics={phonemics}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default forwardRef(WordsList);\n","var _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"cancel\");\n\nvar _ref3 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M19.587 16.001l6.096 6.096c0.396 0.396 0.396 1.039 0 1.435l-2.151 2.151c-0.396 0.396-1.038 0.396-1.435 0l-6.097-6.096-6.097 6.096c-0.396 0.396-1.038 0.396-1.434 0l-2.152-2.151c-0.396-0.396-0.396-1.038 0-1.435l6.097-6.096-6.097-6.097c-0.396-0.396-0.396-1.039 0-1.435l2.153-2.151c0.396-0.396 1.038-0.396 1.434 0l6.096 6.097 6.097-6.097c0.396-0.396 1.038-0.396 1.435 0l2.151 2.152c0.396 0.396 0.396 1.038 0 1.435l-6.096 6.096z\"\n});\n\nvar SvgCancel = function SvgCancel(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCancel, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/cancel.444e3404.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useRef } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { ReactComponent as CancelIcon } from \"../../SVG/cancel.svg\";\nimport { useDatabaseContext } from \"components/providers/DatabaseProvider\";\n\nfunction SearchWordsForm({ onChange }) {\n  const { getDescriptorsForWords } = useDatabaseContext();\n\n  const [search, setSearch] = useState({\n    input: \"\",\n  });\n  const searchInputRef = useRef();\n\n  useHotkeys(\"Command+j\", () => {\n    searchInputRef.current.focus();\n  });\n\n  const handleClearClick = () => {\n    setSearch({ input: \"\" });\n    onChange(\"\");\n  };\n\n  const getInputWords = (search) => {\n    const leaveOnlyLetters = (str) => str.replace(/[^A-Za-z\\s]/g, \"\");\n\n    const inputWords = leaveOnlyLetters(search)\n      .toLowerCase()\n      .split(\" \")\n      .filter((item) => !!item);\n\n    return inputWords;\n  };\n\n  const handleSearchInputChange = async (event) => {\n    const input = event.target.value;\n    setSearch(input);\n\n    const inputWords = getInputWords(input);\n\n    // Given an array of input words (which may or may not be correct)\n    // I want back the descriptors for these words\n    const inputWordsDescriptors = await getDescriptorsForWords(inputWords);\n\n    onChange(inputWordsDescriptors);\n  };\n\n  return (\n    <article className=\"b-search\">\n      <div className=\"b-search__wrapper\">\n        <label htmlFor=\"search\" hidden>\n          Search\n        </label>\n        <DebounceInput\n          id=\"search\"\n          inputRef={searchInputRef}\n          debounceTimeout={600}\n          className=\"b-search__input\"\n          value={search.input}\n          onChange={handleSearchInputChange}\n          placeholder=\"Command+j to focus\"\n        />\n\n        <div\n          className=\"b-search__cancel\"\n          tabIndex=\"0\"\n          onKeyPress={handleClearClick}\n          onClick={handleClearClick}\n        >\n          <CancelIcon />\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default SearchWordsForm;\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\";\nimport { useRef } from \"react\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport WordsList from \"../WordsList/WordsList\";\n\n// Note: There is probably a much better way of doing this, but I don't want to spend more time on it atm\n// Using references is the way to avoid rerenderings of the ui while helping to manage playing/stop states\n\nfunction Phrase({ inputWords }) {\n  let { current: playing } = useRef(false);\n  const wordsRef = useRef();\n  let { current: timeoutListRef } = useRef([]);\n  useHotkeys(\"Command+u\", togglePlaying);\n\n  function togglePlaying() {\n    if (playing) {\n      stopPlaying();\n    } else {\n      startPlaying();\n    }\n  }\n\n  const clearTimeoutList = () => {\n    timeoutListRef.forEach(clearTimeout);\n    timeoutListRef = [];\n  };\n\n  function handlePlayClick() {\n    if (!playing) {\n      startPlaying();\n    }\n  }\n\n  const startPlaying = () => {\n    playing = true;\n    const audioElements = [...wordsRef.current.querySelectorAll(\"audio\")];\n\n    const timeBetweenWordsInMs = 50;\n    let elapsedTimeInMs = 0;\n\n    // We schedule each audio to play after the previous one has finished\n    audioElements.forEach((audio) => {\n      timeoutListRef.push(\n        setTimeout(() => {\n          audio.play();\n        }, elapsedTimeInMs)\n      );\n\n      elapsedTimeInMs += audio.duration * 1000 + timeBetweenWordsInMs;\n    });\n\n    // After all the audios have finished playing we change reference to playing false\n    setTimeout(() => {\n      playing = false;\n    }, elapsedTimeInMs);\n  };\n\n  const stopPlaying = () => {\n    playing = false;\n    clearTimeoutList();\n  };\n\n  const handleStopButtonClick = () => {\n    stopPlaying();\n  };\n\n  return (\n    <section>\n      <button onClick={handlePlayClick}>Play Search</button>\n      <button onClick={handleStopButtonClick}>Stop</button>\n      <small\n        css={css`\n          margin-top: 4px;\n          display: inline-block;\n          padding: 8px;\n          font-size: 0.7rem;\n        `}\n      >\n        Toggle play/stop using{\" \"}\n        <kbd\n          css={css`\n            font-weight: bold;\n            background: #e8e2e2;\n            border-radius: 2px;\n            font-style: italic;\n            padding: 2px 4px;\n          `}\n        >\n          Command + u\n        </kbd>{\" \"}\n        from your keyboard\n      </small>\n\n      <WordsList ref={wordsRef} words={inputWords} display=\"inline\" />\n    </section>\n  );\n}\n\nexport default Phrase;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport { Frame } from \"components/lib\";\nimport { Button } from \"reactstrap\";\n\nexport const Error = ({ resetHandler, error }) => {\n  return (\n    <div role=\"alert\">\n      <Frame>\n        <div>There has been an error</div>\n        <pre>{error.message}</pre>\n        <Button color=\"primary\" onClick={resetHandler}>\n          Try again\n        </Button>\n      </Frame>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport styled from \"@emotion/styled\";\n\nexport const Frame = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { Frame } from \"components/lib\";\nimport { Spinner as RsSpinner } from \"reactstrap\";\n\nexport const Spinner = ({ size = \"full\" }) => {\n  if (size === \"full\") {\n    return (\n      <Frame>\n        <BounceLoader color=\"#ff0000\" loading={true} speedMultiplier={0.8} />\n      </Frame>\n    );\n  }\n\n  if (size === \"small\") {\n    return (\n      <RsSpinner color=\"primary\" size=\"sm\">\n        Loading...\n      </RsSpinner>\n    );\n  }\n\n  throw new Error(\"Spinner size must be correctly specified\");\n};\n","import * as React from \"react\";\n\nfunction useSafeDispatch(dispatch) {\n  const mounted = React.useRef(false);\n  React.useLayoutEffect(() => {\n    mounted.current = true;\n    return () => (mounted.current = false);\n  }, []);\n  return React.useCallback(\n    (...args) => (mounted.current ? dispatch(...args) : void 0),\n    [dispatch]\n  );\n}\n\nconst defaultInitialState = { status: \"idle\", data: null, error: null };\nfunction useAsync(initialState) {\n  const initialStateRef = React.useRef({\n    ...defaultInitialState,\n    ...initialState,\n  });\n  const [{ status, data, error }, setState] = React.useReducer(\n    (s, a) => ({ ...s, ...a }),\n    initialStateRef.current\n  );\n\n  const safeSetState = useSafeDispatch(setState);\n\n  const setData = React.useCallback(\n    (data) => safeSetState({ data, status: \"resolved\" }),\n    [safeSetState]\n  );\n  const setError = React.useCallback(\n    (error) => safeSetState({ error, status: \"rejected\" }),\n    [safeSetState]\n  );\n  const reset = React.useCallback(\n    () => safeSetState(initialStateRef.current),\n    [safeSetState]\n  );\n\n  const run = React.useCallback(\n    (promise) => {\n      if (!promise || !promise.then) {\n        throw new Error(\n          `The argument passed to useAsync().run must be a promise. Maybe a function that's passed isn't returning anything?`\n        );\n      }\n      safeSetState({ status: \"pending\" });\n      return promise.then(\n        (data) => {\n          setData(data);\n          return data;\n        },\n        (error) => {\n          setError(error);\n          return Promise.reject(error);\n        }\n      );\n    },\n    [safeSetState, setData, setError]\n  );\n\n  return {\n    isIdle: status === \"idle\",\n    isLoading: status === \"pending\",\n    isError: status === \"rejected\",\n    isSuccess: status === \"resolved\",\n\n    setData,\n    setError,\n    error,\n    status,\n    data,\n    run,\n    reset,\n  };\n}\n\nexport { useAsync };\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport WordsList from \"../../WordsList/WordsList\";\nimport { useDatabaseContext } from \"components/providers/DatabaseProvider\";\nimport SearchWordsForm from \"../../search-words-form/SearchWordsForm\";\nimport Phrase from \"../../phrase/Phrase\";\nimport { Spinner, Error } from \"components/lib\";\nimport { useAsync } from \"hooks/useAsync\";\n\nconst WordInfo = ({ searchInputWords, selectedWord, isSearchActive }) => {\n  const { getDefinition } = useDatabaseContext();\n  const [wordInfo, setWordInfo] = useState({\n    word: \"\",\n    definition: \"\",\n  });\n\n  const { word, definition } = wordInfo;\n\n  useEffect(() => {\n    const getWordInfo = async (inputWords, selectedWord) => {\n      if (inputWords.length === 1) {\n        const word = inputWords[0].word;\n\n        setWordInfo({\n          word,\n          definition: await getDefinition(word),\n        });\n      } else if (selectedWord && !isSearchActive()) {\n        const word = selectedWord;\n        setWordInfo({\n          word,\n          definition: await getDefinition(word),\n        });\n      } else {\n        setWordInfo({\n          word: \"\",\n          definition: \"\",\n        });\n      }\n    };\n\n    getWordInfo(searchInputWords, selectedWord);\n  }, [getDefinition, isSearchActive, searchInputWords, selectedWord]);\n\n  if (word && definition) {\n    return (\n      <div\n        css={css`\n          background-color: blue;\n          padding: 2rem;\n        `}\n      >\n        {word} - {definition}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst Words = () => {\n  const { getSomeWords } = useDatabaseContext();\n  const [searchInputWords, setSearchInputWords] = useState([]);\n  const [selectedWord, setSelectedWord] = useState();\n  const [initialWordNumber, setInitialWordNumber] = useState(0);\n  const {\n    run,\n    data: words,\n    status,\n    error,\n    resetStatus: resetWordsStatus,\n  } = useAsync();\n\n  const isSearchActive = useCallback(() => searchInputWords.length > 0, [\n    searchInputWords.length,\n  ]);\n\n  const resetStatus = () => {\n    setSearchInputWords([]);\n    setSelectedWord();\n    setInitialWordNumber(0);\n    resetWordsStatus();\n  };\n\n  useEffect(() => {\n    // throw new Error(\"💥 CABOOM 💥\");\n\n    if (status === \"idle\") {\n      run(getSomeWords(20));\n    }\n  }, [getSomeWords, run, status]);\n\n  const handleSearchInputChange = (inputWords) => {\n    setSearchInputWords(inputWords);\n  };\n\n  const handleInitialWordNumberChange = (e) =>\n    setInitialWordNumber(e.target.value);\n\n  const handleWordClick = (word) => {\n    setSelectedWord(word);\n  };\n\n  if (status === \"pending\" || status === \"idle\") {\n    return <Spinner />;\n  }\n\n  if (status === \"rejected\") {\n    return <Error resetHandler={resetStatus} error={error} />;\n  }\n\n  if (status === \"resolved\") {\n    return (\n      <section\n        css={css`\n          padding: 2rem;\n        `}\n      >\n        <SearchWordsForm onChange={handleSearchInputChange} />\n        {isSearchActive() && searchInputWords.length > 0 && (\n          <Phrase inputWords={searchInputWords} />\n        )}\n\n        <WordInfo\n          searchInputWords={searchInputWords}\n          selectedWord={selectedWord}\n          isSearchActive={isSearchActive}\n        />\n\n        {words.length > 0 && !isSearchActive() && (\n          <div>\n            <section className=\"starting-word-section\">\n              <p>Initial word number:</p>\n              <input\n                onChange={handleInitialWordNumberChange}\n                className=\"starting-word\"\n                value={initialWordNumber}\n              />\n            </section>\n            <WordsList onClick={handleWordClick} display=\"grid\" words={words} />\n          </div>\n        )}\n      </section>\n    );\n  }\n};\n\nexport { Words };\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/react\";\nimport { Suspense, lazy, useState } from \"react\";\nimport \"./App.css\";\nimport NavMenu from \"./components/NavMenu/NavMenu.js\";\nimport { Words } from \"./components/pages/words/Words\";\nimport { ReactComponent as CancelIcon } from \"SVG/cancel.svg\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useLoadPendingParts from \"hooks/useLoadPendingParts\";\nimport { useDatabaseLoadStatusContext } from \"components/providers/DatabaseLoadStatusProvider\";\nimport { Spinner } from \"components/lib\";\n\nconst Phonemes = lazy(() => import(\"./components/Phonemes/Phonemes.js\"));\nconst Spell = lazy(() => import(\"./components/Spell/Spell.js\"));\n\nconst DatabaseLoadingStatus = () => {\n  const { loadStatus } = useDatabaseLoadStatusContext();\n  const [visible, setVisible] = useState(true);\n\n  const handleClearMessage = () => {\n    setVisible(false);\n  };\n\n  const isLoaded = loadStatus === \"fullyLoaded\";\n\n  const message = isLoaded\n    ? \"Database is fully loaded! 🎉🎉\"\n    : \"Database loading in progress. Please be patient, this may take a while\";\n\n  if (visible) {\n    return (\n      <div\n        css={css`\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background-color: lightyellow;\n          border-bottom: 1px solid hsl(240deg 9% 69% / 10%);\n          position: relative;\n          padding: 2px 0;\n        `}\n      >\n        <p\n          css={css`\n            margin: 0;\n            margin-right: 8px;\n            font-size: 1rem;\n          `}\n        >\n          {message}\n        </p>\n        {!isLoaded && <Spinner size=\"small\" />}\n        <div\n          css={css`\n            position: absolute;\n            right: 3px;\n            top: -3px;\n            cursor: pointer;\n          `}\n          onKeyPress={handleClearMessage}\n          onClick={handleClearMessage}\n        >\n          <CancelIcon\n            css={css`\n              width: 1rem;\n              vertical-align: unset;\n              fill: #807b7b;\n            `}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nfunction App() {\n  useLoadPendingParts();\n\n  return (\n    <Router>\n      <div className=\"App fluid-type\">\n        <header>\n          <DatabaseLoadingStatus />\n          <NavMenu />\n        </header>\n\n        <main\n          css={css`\n            padding: 20px;\n          `}\n        >\n          <Switch>\n            <Route path=\"/words\">\n              <Words />\n            </Route>\n            <Suspense fallback={<Spinner />}>\n              <Route path=\"/phonemes\">\n                <Phonemes />\n              </Route>\n              <Route path=\"/spell\">\n                <Spell />\n              </Route>\n            </Suspense>\n            <Route path=\"/\">\n              <Words />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { useDatabaseLoadStatusContext } from \"components/providers/DatabaseLoadStatusProvider\";\nimport { useDatabaseContext } from \"components/providers/DatabaseProvider\";\n\nexport default function useLoadPendingParts() {\n  const { loadStatus, pendingParts, updateLoadedParts } =\n    useDatabaseLoadStatusContext();\n  const currentRenderLoadedPartsRef = React.useRef([]);\n  const { db, populate } = useDatabaseContext();\n\n  React.useEffect(() => {\n    const writePendingPartWordsToDb = async (part, db) => {\n      try {\n        const loadFromDiskResult = await import(`utils/db/divided/${part}`);\n\n        await populate(db, loadFromDiskResult.wordDescriptors);\n\n        currentRenderLoadedPartsRef.current.push(part);\n        console.info(\n          `${part} has been successfully populated into databaes ${db.name}`\n        );\n        return part;\n      } catch (error) {\n        console.error(`Error loading database pending parts - ${error}`);\n        return Promise.reject(part);\n      }\n    };\n\n    async function loadPendingParts(db, pendingParts) {\n      const promiseList = pendingParts.map(async (pendingPart) => {\n        return await writePendingPartWordsToDb(pendingPart, db);\n      });\n\n      return await Promise.allSettled(promiseList);\n    }\n\n    const asyncWrapper = async () => {\n      await loadPendingParts(db, pendingParts);\n\n      updateLoadedParts(currentRenderLoadedPartsRef.current);\n    };\n\n    if (db) {\n      if (loadStatus !== \"fullyLoaded\") {\n        asyncWrapper();\n      } else {\n        console.info(\"Database is already populated\");\n      }\n    } else {\n      console.error(`db is not available`);\n    }\n\n    return () => {\n      currentRenderLoadedPartsRef.current = [];\n    };\n  }, [pendingParts, loadStatus, updateLoadedParts, db, populate]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Error } from \"components/lib\";\n\nfunction ErrorFallback({ error, resetErrorBoundary }) {\n  return <Error resetHandler={resetErrorBoundary} error={error} />;\n}\n\nexport default function AppErrorBoundary({ children }) {\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>{children}</ErrorBoundary>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DatabaseProvider } from \"./components/providers/DatabaseProvider\";\nimport { DatabaseLoadStatusProvider } from \"./components/providers/DatabaseLoadStatusProvider\";\nimport AppErrorBoundary from \"./AppErrorBoundary\";\n\nReactDOM.render(\n  <AppErrorBoundary>\n    <DatabaseProvider>\n      <DatabaseLoadStatusProvider>\n        <App />\n      </DatabaseLoadStatusProvider>\n    </DatabaseProvider>\n  </AppErrorBoundary>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nconst DatabaseContext = React.createContext();\nDatabaseContext.displayName = \"DatabaseContext\";\n\nfunction useDatabaseContext() {\n  const context = React.useContext(DatabaseContext);\n\n  // Logging here instead of throwing an error since the context value is async and not\n  // having context could mean that the content is not ready yet or that it has been\n  // used outside of a provider\n  // if (!context) {\n  //   console.warn(\"useDatabaseState must be used within the DatabaseProvider\");\n  // } else {\n  //   console.info(\"useDatabaseState was used within DatabaseProvider\");\n  // }\n\n  return context;\n}\n\n// const createOrOpenDb = async () => {\n//   let db = new window.PouchDB(\"wordsDB\");\n//   await db.destroy();\n//   db = new window.PouchDB(\"wordsDB\");\n//   console.info(`Opened connection to db ${db.name} using adapter ${db.adapter}`);\n\n//   return db;\n// };\n\n// TODO: Replace previous definition with this one\nconst createOrOpenDb = () => {\n  const db = new window.PouchDB(\"wordsDB\");\n  console.info(\n    `Opened connection to db ${db.name} using adapter ${db.adapter}`\n  );\n\n  return db;\n};\n\nfunction DatabaseProvider({ children }) {\n  const [db, setDb] = useState();\n\n  useEffect(() => {\n    let db;\n    const createAndConfigurateDb = async () => {\n      try {\n        db = createOrOpenDb();\n        // db = await createOrOpenDb();\n\n        await db.createIndex({\n          index: { fields: [\"word\"] },\n        });\n\n        setDb(db);\n      } catch (error) {\n        throw new Error(`Imposible to connect to db - ${error}`);\n      }\n    };\n\n    createAndConfigurateDb();\n\n    return () => {\n      db.close();\n    };\n  }, []);\n\n  const getSomeWords = useCallback(\n    async (numberOfWords) => {\n      try {\n        // throw new Error(\"💥 CABOOM 💥\");\n        if (db) {\n          const allDocs = await db.allDocs({\n            include_docs: true,\n            limit: numberOfWords,\n          });\n          const parsedWords = allDocs.rows.map((n) => {\n            return {\n              word: n.doc.word,\n              phonemics: n.doc.phonemics,\n            };\n          });\n\n          return parsedWords;\n        } else {\n          return [];\n        }\n      } catch (error) {\n        console.error(`Error reading docs: ${error}`);\n        return Promise.reject(error);\n      }\n    },\n    [db]\n  );\n\n  const getDefinition = useCallback(\n    async (word) => {\n      try {\n        const wordDescriptor = await db.find({\n          selector: { word },\n          fields: [\"definitions\"],\n        });\n\n        return wordDescriptor.docs[0].definitions[0].defs[0].def;\n      } catch (error) {\n        console.error(`Error finding descriptor for word ${word}`);\n      }\n    },\n    [db]\n  );\n\n  const getDescriptorsForWords = useCallback(\n    async (words) => {\n      const queries = words.map((word) => {\n        return db.find({\n          selector: { word },\n          fields: [\"phonemics\", \"word\"],\n        });\n      });\n\n      const queriesResults = await Promise.allSettled(queries);\n\n      const inputWordsDescriptors = queriesResults.reduce(\n        (acc, queryResult) => {\n          return queryResult.status === \"fulfilled\" &&\n            queryResult.value.docs.length > 0\n            ? [...acc, queryResult.value.docs[0]]\n            : acc;\n        },\n        []\n      );\n\n      return inputWordsDescriptors;\n    },\n    [db]\n  );\n\n  const populate = (db, data) => {\n    return db\n      .bulkDocs(data)\n      .then(function (result) {\n        console.info(\n          `${result.length} documents were added to ${db.name} database`\n        );\n        // console.info(result);\n      })\n      .catch(function (error) {\n        console.error(`Error populating database - ${error}`);\n      });\n  };\n\n  const Frame = styled.div`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  `;\n\n  if (!db) {\n    return (\n      <Frame>\n        <BounceLoader color=\"#ff0000\" loading={true} speedMultiplier={0.8} />\n      </Frame>\n    );\n  }\n\n  const value = {\n    getSomeWords,\n    getDefinition,\n    getDescriptorsForWords,\n    populate,\n    db,\n  };\n\n  return (\n    <DatabaseContext.Provider value={value}>\n      {children}\n    </DatabaseContext.Provider>\n  );\n}\n\nexport { DatabaseProvider, useDatabaseContext };\n","import React from \"react\";\n\nimport fileNamesJson from \"utils/db/divided/file-names\";\n\nconst initialPendingParts = fileNamesJson.fileNames.slice(0, 5);\n\nconst DatabaseLoadStatusContext = React.createContext({\n  loadStatus: \"empty\",\n  updateLoadedParts: () => {},\n});\n\nDatabaseLoadStatusContext.displayName = \"DatabaseLoadStatusContext\";\n\nfunction useDatabaseLoadStatusContext() {\n  const context = React.useContext(DatabaseLoadStatusContext);\n\n  return context;\n}\n\nconst getLoadStatus = (loadedParts) => {\n  const allPartsAreLoaded = initialPendingParts.every((part) => {\n    return loadedParts.includes(part);\n  });\n\n  return allPartsAreLoaded ? \"fullyLoaded\" : \"empty\";\n};\n\nconst getPendingParts = (loadedParts) => {\n  return initialPendingParts.filter((part) => {\n    return !loadedParts.includes(part);\n  });\n};\n\nfunction DatabaseLoadStatusProvider({ children }) {\n  const [loadedParts, setLoadedParts] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"loadedParts\")) || []\n  );\n\n  const loadStatus = getLoadStatus(loadedParts);\n  const pendingParts = getPendingParts(loadedParts);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"loadedParts\", JSON.stringify(loadedParts));\n  }, [loadedParts]);\n\n  const updateLoadedParts = React.useCallback((parts) => {\n    setLoadedParts((loadedParts) => [...loadedParts, ...parts]);\n  }, []);\n\n  const value = {\n    loadStatus,\n    pendingParts,\n    updateLoadedParts,\n  };\n\n  return (\n    <DatabaseLoadStatusContext.Provider value={value}>\n      {children}\n    </DatabaseLoadStatusContext.Provider>\n  );\n}\n\nexport { DatabaseLoadStatusProvider, useDatabaseLoadStatusContext };\n","import React from \"react\";\nimport \"./Word.css\";\n\nconst Word = ({ short, word, phonemics, type, onClick }) => {\n  const handleOnMouseOver = () => {\n    const audio = document.querySelector(`#${word}`);\n    audio.play();\n\n    setTimeout(() => {\n      if (onClick !== undefined) {\n        onClick(word);\n      }\n    }, audio.duration * 1000);\n  };\n\n  const getWord = () =>\n    short ? (\n      <span onMouseOver={handleOnMouseOver} onClick={handleOnMouseOver}>\n        <span className=\"word-name\"> {word}</span>\n        <span className=\"word-phonemics\"> ({phonemics})</span>\n      </span>\n    ) : (\n      <div>\n        <div className=\"word-name\">{word}</div>\n        <div className=\"word-phonemics\">{phonemics}</div>\n      </div>\n    );\n\n  const getClassName = () => {\n    let typeClass = \"\";\n\n    if (type === \"spell\") {\n      typeClass = \"spell\";\n    } else {\n      typeClass = short ? \"short\" : \"normal\";\n    }\n\n    return `word ${typeClass}`;\n  };\n\n  return (\n    <div className={getClassName()} onClick={handleOnMouseOver}>\n      {getWord()}\n      <audio hidden={true} id={word} controls>\n        <source src={`./audioFiles/${word}.mp3`} type=\"audio/mpeg\"></source>\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n};\n\nexport default Word;\n"],"sourceRoot":""}